{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/Cards/ProfileCompany.js","components/Cards/ProfileLic.js","components/Cards/ProfileSchool.js","components/Cards/ProfileTech.js","components/menu/Profile.js","components/menu/History.js","components/menu/Review.js","components/menu/Dev.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","fluid","children","Home","href","subTitleStyle","color","fontSize","subContentStyle","fontFamily","ProfileCompany","Accordion","defaultActiveKey","alwaysOpen","Item","eventKey","Header","Body","style","ProfileLic","Image","src","process","thumbnail","ProfileSchool","Table","responsive","ProfileTech","ListGroup","txtStyle","imgStyle","width","display","margin","Profile","leftMenu","v","Row","Col","sm","Card","Img","variant","Title","Text","ListGroupItem","action","changeLeftMenu","span","offset","History","Review","Dev","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc636671.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './NavMenu.css';\n\nexport class NavMenu extends Component {\n    static displayName = NavMenu.name;\n\n    constructor(props) {\n        super(props);\n\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n        this.state = {\n            collapsed: true\n        };\n    }\n\n    toggleNavbar() {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    render() {\n        return (\n            <header>\n                <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\n                    <Container>\n                        <NavbarBrand tag={Link} to=\"/\">뿌린대로 거두자</NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\n                            <ul className=\"navbar-nav flex-grow\">\n                                <NavItem>\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/Profile\">Profile</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/History\">History</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/Review\">Review</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/Dev\">Dev</NavLink>\n                                </NavItem>\n                            </ul>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n            </header>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport { NavMenu } from './NavMenu';\n\nexport class Layout extends Component {\n  static displayName = Layout.name;\n\n  render () {\n    return (\n      <div>\n        <NavMenu />\n        <Container fluid>\n          {this.props.children}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {Container} from 'reactstrap';\n\nexport class Home extends Component {\n  static displayName = Home.name;\n\n  render () {\n    return (\n      <Container>\n        <h1>Hello, world!</h1>\n        <p>Welcome to your new single-page application, built with:</p>\n        <ul>\n          <li><a href='https://www.elastic.co/kr/what-is/elk-stack'>ELK</a> for Elastic Stack </li>\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\n        </ul>\n\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\n\r\n\r\nconst subTitleStyle = {\r\n  color : \"black\",\r\n  fontSize :\"20px\"\r\n}\r\nconst subContentStyle= {\r\n  color : \"#6c6c6c\",\r\n  fontFamily : \"bmjua\"\r\n}\r\n\r\nexport class ProfileCompany extends Component {\r\n  render () {\r\n    return (\r\n      <> \r\n        <p>경력 사항</p>\r\n        <Accordion defaultActiveKey={['2']} alwaysOpen >\r\n        <Accordion.Item eventKey=\"0\">\r\n          <Accordion.Header>Bizwell for 2015.04 ~ 2017.03 </Accordion.Header>\r\n          <Accordion.Body style={subContentStyle}>\r\n            <p style={subTitleStyle}>\r\n            그룹웨어 솔루션 유지 보수\r\n            </p>\r\n            - 그룹웨어 기능 오류 수정/정기 패치 반영\r\n            <br/>\r\n            - ERP (SAP) 연동 결재 문서 수정\r\n            <br/>\r\n            - 결재 공람지정 시 알림 메일 자동 발송\r\n            <br/>\r\n            - 그룹웨어-AD서버 간 사용자 관리 시스템 연동 관련 시스템 수정\r\n            <br/>\r\n            - 결재 문서 생성(jsp 페이지) , 결재 연동/로적 수정( 웹서비스 호출 후 XML 데이터 파싱 작업)\r\n            <br/>\r\n            - 특정 기능 게시판 개발\r\n            <br/>\r\n            - 메일 서버 장애/오류 점검\r\n            <br/>\r\n            - 그룹웨어 서버 환경 변경에 따른 지원\r\n\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"1\">\r\n          <Accordion.Header>Initech for 2017.12 ~ 2019.03 </Accordion.Header>\r\n          <Accordion.Body style={subContentStyle}>\r\n            <p style={subTitleStyle}>DB 암호화 솔루션 구축 수행</p>\r\n            - 정형/비정형 데이터 암호화 솔루션 설치 및 유지보수 수행\r\n            <br/>\r\n            - API 방식 : 데이터 암호화 API 제공 및 가이드\r\n            <br/>\r\n            - plugin 방식 : oracle java function 구현\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"2\">\r\n          <Accordion.Header>Konan Technology for 2019.03 ~</Accordion.Header>\r\n          <Accordion.Body style={subContentStyle}>\r\n            <p style={subTitleStyle}>검색/분석 엔진 구축 및 시스템 개발</p>\r\n            - 자사 솔루션 구축 후 엔드포인트 연동부 개발(화면 및 API)\r\n            <br/>\r\n            - 고객사가 요구하는 기능을 위한 데이터 분석 및 화면(웹페이지 및 시각화) 개발\r\n            <br/>\r\n            - 주요 프로젝트 내역\r\n            <br/>\r\n              1) 2019 현대자동차 소비자 설문조사 관리시스템 개발\r\n              <br/>\r\n                - 자료 관리 및 통합 검색 시스템 개발\r\n                <br/>\r\n                - 자료 PDF 변환 및 viewer 오픈소스 적용 \r\n                <br/>\r\n              2) 2019 국방전산정보원 진위여부 분석시스템 개발\r\n              <br/>\r\n                - 인물 관계 데이터 분석 및 관계망 시각화\r\n                <br/>\r\n              3) 내부 프로젝트 – 크롤러 개발\r\n              <br/>\r\n                - 웹 크롤러 개발\r\n                <br/>\r\n                - 데이터 파싱\r\n                <br/>\r\n              4) 2020 경찰청 빅데이터 플랫폼 1차년도 개발\r\n              <br/>\r\n                - 통합 검색 시스템 구축 및 분석 파일럿 개발\r\n                <br/>\r\n                - 법령 xml 데이터, 내부 게시판 db 데이터 등 검색 스키마 구성 및 API 제공\r\n                <br/>\r\n              5) 서울지방국세청 포렌식 검색시스템(2021~현재) 개발\r\n              <br/>\r\n                - 탈세 조사용 포렌식 검색 시스템 구축\r\n                <br/>\r\n                - 주요 기능 : 대량(79대)서버 환경 구축, 대용량 파일 데이터(10~20T) 텍스트 추출 및 색인, 검색 화면 개발\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\n\r\nexport class ProfileLic extends Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <p>자격증 정보</p>\r\n        <Image src={process.env.PUBLIC_URL + '/img/자격증정보.PNG'} thumbnail>\r\n        </Image>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\n\r\nexport class ProfileSchool extends Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <p>학력 사항</p>\r\n        <Table responsive=\"md\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>학교명(소재지)</th>\r\n              <th>구분</th>\r\n              <th>재학기간</th>\r\n              <th>전공</th>\r\n              <th>학점</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>백석대학교 (충남)</td>\r\n              <td>졸업</td>\r\n              <td>2011.03 ~ 2015.02</td>\r\n              <td>정보통신 멀티미디어학과<br />\r\n            정보통신 소프트웨어학과 (부전공)</td>\r\n              <td>3.97 / 4.5</td>\r\n            </tr>\r\n            <tr>\r\n              <td>2</td>\r\n              <td>삼척여자고등학교</td>\r\n              <td>졸업</td>\r\n              <td>2008.03 ~ 2011.02</td>\r\n              <td>문과</td>\r\n              <td>-</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\n\r\nconst subContentStyle= {\r\n  color : \"#6c6c6c\",\r\n  fontFamily : \"bmjua\"\r\n}\r\n\r\nexport class ProfileTech extends Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <p>보유 기술</p>\r\n        <ListGroup>\r\n          <ListGroup.Item>Java Programming / 상</ListGroup.Item>\r\n          <ListGroup.Item><p>DataBase & SQL / 중</p>\r\n            <div style={subContentStyle}>\r\n              ORACLE 환경의 DataBase 사용<br />\r\n              DBMS 또는 SQL문을 활용하여 테이블, 시퀀스 생성 및 변경, 삭제.<br />\r\n              SQL문을 이용하여 Data 조작 및 활용.<br />\r\n            </div>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item><p>JavaScript / 중</p>\r\n            <div style={subContentStyle}>\r\n              Event처리 및 함수 정의, 구현<br />\r\n              ES6 개념<br />\r\n              Library : Jquery , node.js , react\r\n            </div>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item><p>Servlet & JSP / 중</p>\r\n            <div style={subContentStyle}>\r\n              MVC1 및 MVC2모델을 이용하여 구성<br />\r\n              JDBC를 사용하여 데이터베이스 연동.\r\n            </div>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item><p>XML/JSON Data Programming / 상</p>\r\n            <div style={subContentStyle}>\r\n              XML 형식으로 된 문서를 파싱하여 Java 프로그램에서 읽어들이거나, 영구적으로 XML 형식의 물리적인 문서로 구성<br />\r\n              Json 기반 restAPI 개발\r\n            </div>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item><p>Framework</p>\r\n            <div style={subContentStyle}>\r\n              Spring 3-5 <br />\r\n              Spring Boot<br />\r\n              vue.js <br />\r\n              Mybatis , JPA\r\n            </div>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item><p>DB & SQL </p>\r\n            <div style={subContentStyle}>\r\n              RDB : MySQL, oracle, MSSQL<br />\r\n              NoSQL : MongoDB, BigQuery<br />\r\n              테이블, 시퀀스 생성 및 변경, 삭제.<br />\r\n              SQL문을 이용하여 Data 조작 및 활용.<br />\r\n            </div>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item></ListGroup.Item>\r\n          <ListGroup.Item></ListGroup.Item>\r\n        </ListGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container, Col, Row, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { ProfileCompany } from '../Cards/ProfileCompany';\r\nimport { ProfileLic } from '../Cards/ProfileLic';\r\nimport { ProfileSchool } from '../Cards/ProfileSchool';\r\nimport { ProfileTech } from '../Cards/ProfileTech';\r\n\r\nconst txtStyle = {\r\n  fontFamily : 'bmjua'\r\n}\r\nconst imgStyle = {\r\n  width : '200px',\r\n  display: 'block',\r\n  margin: 'auto'\r\n}\r\nexport class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { leftMenu : <ProfileSchool/> };\r\n  }\r\n  changeLeftMenu(v){\r\n    if(v === 0){\r\n      this.setState({leftMenu: <ProfileSchool/>});\r\n    }else if(v === 1){\r\n      this.setState({leftMenu: <ProfileCompany/>});\r\n    }else if(v === 2){\r\n      this.setState({leftMenu: <ProfileTech/>});\r\n    }else if(v === 3){\r\n      this.setState({leftMenu: <ProfileLic/>});\r\n    }else{\r\n      this.setState({leftMenu: <></>});\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Container>\r\n        <h1>Profile</h1>\r\n        <Row>\r\n          <Col sm={3} >\r\n            <Card style={{ width: '18rem' }}>\r\n              <Card.Img variant=\"top\" className=\"justify-content-md-center\" \r\n                  style={imgStyle} src={process.env.PUBLIC_URL + '/img/image1.jpg'} />\r\n              <Card.Body>\r\n                <Card.Title>HYE YOON</Card.Title>\r\n                <Card.Text style={txtStyle} >\r\n                  MAIN : JAVA developer <br></br>\r\n                  SUB : SW Engineer (Search Engine & Text Analytics)\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <ListGroup style={txtStyle} className=\"list-group-flush\">\r\n                <ListGroupItem action onClick={() => this.changeLeftMenu(0) }>학력사항</ListGroupItem>\r\n                <ListGroupItem action onClick={() => this.changeLeftMenu(1) }>경력사항</ListGroupItem>\r\n                <ListGroupItem action onClick={() => this.changeLeftMenu(2) }>보유기술</ListGroupItem>\r\n                <ListGroupItem action onClick={() => this.changeLeftMenu(3) }>자격증/어학/수상</ListGroupItem>\r\n              </ListGroup>\r\n            </Card>\r\n\r\n          </Col>\r\n          <Col sm={{ span: 8, offset: 1 }}>\r\n            {this.state.leftMenu}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class History extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>History</h1>\r\n        <p>Wait...테스트중</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Review extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Review</h1>\r\n        <p>Wait...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Dev extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Dev</h1>\r\n        <p>Wait...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\nimport { Layout } from './components/Layout';\nimport { Home } from './components/Home';\nimport { Profile } from './components/menu/Profile';\nimport { History } from './components/menu/History';\nimport { Review } from './components/menu/Review';\nimport { Dev } from './components/menu/Dev';\n\nimport './css/custom.css'\nimport { ProfileSchool } from './components/Cards/ProfileSchool';\nimport './css/bootstrap.min.css';\n\n\nexport default class App extends Component {\n    static displayName = App.name;\n\n    render() {\n        return (\n            <Layout>\n                <Route exact path='/' component={Home} />\n                <Route path='/Profile' component={Profile} />\n                <Route path='/History' component={History} />\n                <Route path='/Review' component={Review}  />\n                <Route path='/Dev' component={Dev}  />\n                <Route path='/Profile/ProfileSchool' component={ProfileSchool} />\n            </Layout>\n        );\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}